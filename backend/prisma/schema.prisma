datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid()) @map("_id")
  name      String?
  username  String   @unique
  email     String   @unique
  password  String
  role      UserRole @default(USER)
  avatar    String?
  balance   Float    @default(0)
  orders    Order[]
  stores    Store[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id         String      @id @default(uuid()) @map("_id")
  totalPrice Float
  status     OrderStatus
  user       User        @relation(fields: [userId], references: [id])
  userId     String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  orderItems OrderItem[]
}

model OrderItem {
  id        String  @id @default(uuid()) @map("_id")
  quantity  Int
  product   Product @relation(fields: [productId], references: [id])
  productId String
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
}

model Product {
  id          String      @id @default(uuid()) @map("_id")
  name        String
  description String
  price       Float
  imageUrl    String?
  store       Store       @relation(fields: [storeId], references: [id])
  storeId     String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  OrderItem   OrderItem[]
}

model Store {
  id          String    @id @default(uuid()) @map("_id")
  name        String
  storeName   String
  description String
  imageUrl    String?
  products    Product[]
  owner       User      @relation(fields: [ownerId], references: [id])
  ownerId     String
  balance     Float     @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum UserRole {
  USER
  SELLER
  ADMIN
}

enum OrderStatus {
  PENDING
  PROCESSING
  DELIVERED
}
